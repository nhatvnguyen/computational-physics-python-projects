{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOb7rlzdNfXjeqx0+rTdz77"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["## Nhat Nguyen \n","### Computational Physics, PHYS 421\n","#### HW8, due: 12/3, 11:59 pm"],"metadata":{"id":"Y-gZNm6bJAGs"}},{"cell_type":"markdown","source":["Note: this is a very challenging assignment. You are unlikely to be successful with it if you do not attend class.\n","\n","1) Temperature Fitting\n","\n","(a) Fit a double sine function to the Spokane airport temperature data (using curve_fit()). Find the best fit parameters and report them. There are seven fit parameters, since you need a constant offset as well. (You can fit only data between MJD 41700 and 58400, or you can use our whole data set because it's pretty close to those limits.)\n","\n","(b) Overplot your fit on the data in two plots. The first should show the fit on diurnal scales, so covering ~10 days. The second should show the fit on annual scales, so covering ~10 years.\n","\n","(c) Calculate the residuals (data - model). Do a linear fit to the residuals. What is the slope, and its uncertainty?\n","\n","(d) Smooth your residuals by 4001 hours (2000 on each side), and overplot your fit. Use a running-average smoothing function that you've written.\n","\n","(e) Calculate the difference of the residual mean between earlier times (MJD 41683 to 50082, Jan. 1973 to Dec. 1995) and later times (MJD 50083 to 58483, Jan. 1996 to Dec. 2018). Find the uncertainty on that difference. Find the significance level of the warming detection (difference divided by uncertainty).\n","\n","2) Use Your Temperature Fits\n","\n","(a) Predict the temperature at 9 am on December 7, 2022, using your two-sine fit. (You'll need to convert the date and time into MJD so it works with the fit you found, and the data we have are in UT, rather than local clock time. Currently we're on PST.)\n","\n","(b) Find the mean temperature at 9 am on December 7 using the temperature measurements between MJD 41683 and 58483. (Our UT offset varies based on whether we're on PDT or PST, but fortunately for December 4 we've always been PST, which is UT-8.)\n","\n","(c) Find the 95% confidence interval (CI) on the mean temperature at 9 am on December 7 assuming Gaussian statistics. (Note this is the CI on the mean. So it won't actually include 95% of your data points.) The 95% interval is approximately 2σ, but use the more accurate 1.96σ.\n","\n","(d) Find the 95% CI on the mean temperature at 9 am on December 7 using a nonparametric bootstrap."],"metadata":{"id":"Oq0Z9ktiNKtr"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"mPMdxNN8NJw_"},"outputs":[],"source":["import numpy as np\n","from astropy.io import ascii\n","import matplotlib.pyplot as plt\n","from jdcal import gcal2jd, jd2gcal\n","from scipy.optimize import curve_fit"]},{"cell_type":"code","source":["%matplotlib inline  "],"metadata":{"id":"LekbMyWMJQYq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BmhRxVdJJkOq","executionInfo":{"status":"ok","timestamp":1670426561157,"user_tz":480,"elapsed":20436,"user":{"displayName":"Nhat Nguyen","userId":"12519508785998357501"}},"outputId":"f60a84b2-7824-40d9-da3f-19c4675a5e29"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["temp_full = ascii.read('/content/drive/MyDrive/Colab Notebooks/PHYS421_Computational Physics/HW/HW8/spokane_temperature_1973_2018.txt')\n"],"metadata":{"id":"cg5JoOgrJk5C"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# We can access each column of data using the column name\n","temp = np.array(temp_full['Temp'])"],"metadata":{"id":"gFBB_yIdJs0n"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["date = temp_full['Date']\n","hrmn = temp_full['HrMn']\n","# the date format is unfortunately, e.g., 20030412, year-month-day, with no delimiters\n","year = np.floor(date/1e4)\n","month = np.floor((date-year*1e4)/1e2)\n","day = np.floor(date-year*1e4-month*1e2)"],"metadata":{"id":"dDRTbBrXJ2F7"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# modf returns the fractional and integer parts separately \n","minutes, hours = np.modf(np.array(hrmn)/100)"],"metadata":{"id":"Zxkvk1u0J4SN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from astropy.table import Table\n","\n","dates = Table([year, month, day, hours, minutes], names=['Year', 'Month', 'Day', 'Hour', 'Minutes'])\n","print(dates[12000:12020])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"G6Y9Is2QJ5v4","executionInfo":{"status":"ok","timestamp":1670426614815,"user_tz":480,"elapsed":22,"user":{"displayName":"Nhat Nguyen","userId":"12519508785998357501"}},"outputId":"5852bb86-af9c-4671-e1bf-3fa5ff868e47"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":[" Year  Month Day  Hour Minutes\n","------ ----- ---- ---- -------\n","1974.0   5.0 24.0 11.0     0.0\n","1974.0   5.0 24.0 12.0     0.0\n","1974.0   5.0 24.0 13.0     0.0\n","1974.0   5.0 24.0 14.0     0.0\n","1974.0   5.0 24.0 15.0     0.0\n","1974.0   5.0 24.0 16.0     0.0\n","1974.0   5.0 24.0 17.0     0.0\n","1974.0   5.0 24.0 18.0     0.0\n","1974.0   5.0 24.0 19.0     0.0\n","1974.0   5.0 24.0 20.0     0.0\n","1974.0   5.0 24.0 21.0     0.0\n","1974.0   5.0 24.0 22.0     0.0\n","1974.0   5.0 24.0 23.0     0.0\n","1974.0   5.0 25.0  0.0     0.0\n","1974.0   5.0 25.0  1.0     0.0\n","1974.0   5.0 25.0  2.0     0.0\n","1974.0   5.0 25.0  3.0     0.0\n","1974.0   5.0 25.0  4.0     0.0\n","1974.0   5.0 25.0  5.0     0.0\n","1974.0   5.0 25.0  6.0     0.0\n"]}]},{"cell_type":"code","source":["i = 0\n","mjd = np.empty(len(year))\n","while(i < len(year)):\n","    offset, mjd[i] = gcal2jd(year[i],month[i],day[i])\n","    i += 1"],"metadata":{"id":"-1k64cIkKAck"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# now we need to incorporate the time into our mjd\n","mjd = mjd + hours/24 + minutes/(24*60)"],"metadata":{"id":"qy62anVSKCNS"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# function created with the help of Joel Reeves\n","\n","def double_sine(data, freq_day, amp_day, phase_day, freq_year, amp_year, phase_year, offset):\n","    \"\"\"\n","    Fit function for the double sine equation\n","\n","    Args:\n","    data: numpy array, values to be model fitted\n","    freq_d: float, daily frequency value\n","    amp_d: float, daily amplitude value\n","    phase_d: float, daily phase value\n","    freq_y: float, yearly frequency value\n","    amp_y: float, yearly amplitude value\n","    phase_y: float, yearly phase value\n","    offset: float, offset value for x\n","    \n","    \"\"\"\n","    return (amp_day * np.sin(data * freq_day + phase_day) + (amp_year * np.sin(data * freq_year + phase_year))) + offset"],"metadata":{"id":"u6aI33YyKHdt"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["## Guess values for function fitting\n","## function fitted with the help of Joel Reeves\n","\n","g_freq_day = 2 * np.pi\n","g_amp_day = 15\n","g_phase_day = np.pi/3.\n","g_freq_year = 2 * np.pi / 365\n","g_amp_year = 17.\n","g_phase_year = 2.\n","g_offset = np.mean(temp)\n","\n","g_params = [g_freq_day, g_amp_day, g_phase_day, g_freq_year, g_amp_year, g_phase_year,g_offset]"],"metadata":{"id":"DhnLQF4uKKUc"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["temp_fitted, pcov = curve_fit(double_sine, mjd, temp, p0=g_params) #fitting the double_sine function to the curve"],"metadata":{"id":"_h0RV_LhKOXU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(temp_fitted)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CxLqNi7yK3om","executionInfo":{"status":"ok","timestamp":1670108058947,"user_tz":480,"elapsed":19,"user":{"displayName":"Nhat Nguyen","userId":"12519508785998357501"}},"outputId":"2ed25781-1fa2-4718-a58f-4a41db430616"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[ 6.28319246  3.97489152  1.49924209  0.01720135 11.5971123   3.73385935\n","  8.88365244]\n"]}]},{"cell_type":"code","source":["## annual scale fit figure\n","\n","plt.plot(mjd, temp, lw=0.5, label = 'Raw Data')\n","plt.plot(mjd, double_sine(mjd, *temp_fitted), color = 'orange', lw = 1, label ='Double Sine Fit')\n","plt.xlim(46350, 50000) # 3650 days\n","plt.title('Spokane airport temperature fit annual scale')\n","plt.xlabel('Modified Julian Dates (days)')\n","plt.ylabel('Temperature in ' + u'\\u00b0'+ 'F')\n","plt.grid()\n","plt.legend()\n","plt.text(46500, -30, 'Nhat Nguyen')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":312},"id":"xNqLIA5rKQf3","executionInfo":{"status":"ok","timestamp":1670426645630,"user_tz":480,"elapsed":3521,"user":{"displayName":"Nhat Nguyen","userId":"12519508785998357501"}},"outputId":"64789ba0-97ab-46a3-abd6-a99373caeae8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(46500, -30, 'Nhat Nguyen')"]},"metadata":{},"execution_count":17},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["## diurnal scale fit figure\n","\n","plt.plot(mjd, temp, lw=1, label = 'Raw Data')\n","plt.plot(mjd, double_sine(mjd, *temp_fitted), color = 'orange', lw = 1.5, label ='Double Sine Fit')\n","plt.xlim(45100, 45110) # 10 days\n","plt.title('Spokane airport temperature fit diurnal scale')\n","plt.xlabel('Modified Julian Dates (days)')\n","plt.ylabel('Temperature in ' + u'\\u00b0'+ 'F')\n","plt.grid()\n","plt.legend()\n","plt.text(45102, -30, 'Nhat Nguyen')\n","\n","# plt.xlim(41700, 58400)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":312},"id":"dS4u90i-KUhN","executionInfo":{"status":"ok","timestamp":1670426651660,"user_tz":480,"elapsed":1876,"user":{"displayName":"Nhat Nguyen","userId":"12519508785998357501"}},"outputId":"9a2281ba-44c4-4b8a-e9a7-dfb5a3eda32a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(45102, -30, 'Nhat Nguyen')"]},"metadata":{},"execution_count":18},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["# define linear fit function \n","def linear(x,slope,intercept): \n","  \"\"\"\n","  This function outputs the linear line with the data, slope, and intercept\n","\n","  Args\n","  x: numpy array, our data\n","  slope: numpy array, our slope\n","  intercept: numpy array, our intercept\n","\n","  Return\n","  slope*x + intercept: numpy array, linear line\n","  \"\"\"\n","  return slope*x + intercept"],"metadata":{"id":"EPM9Nxx5PLyP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# smooth function\n","\n","def smooth_fix(data, smoothing_length):\n","  \"\"\"\n","  This function will smooth the data set that is passed through by doing a running average smoothing method\n","\n","  Args: \n","  data: numpy array, our data to smooth\n","  smoothing_length: int, the length for our data to be smoothed\n","\n","  Return: \n","  data_smoothed: numpy array, the smoothed data\n","  time_smoothed: numpy array, the smoothed (truncated) time array\n","  \"\"\"\n","  data_smoothed = np.empty(len(data))\n","  \n","  time_smoothed = np.empty(len(data))\n","  for i in range(0, len(data)):\n","    data_smoothed[i] = np.sum(data[i:(2*(i+int(smoothing_length))+1)]) / (2*int(smoothing_length)+1)\n","    # time_smoothed[i] = \n","    i += 1\n","  \n","  return data_smoothed"],"metadata":{"id":"w3_CYO9zSqYC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# smooth function\n","\n","def smooth(data, smoothing_length):\n","  \"\"\"\n","  This function will smooth the data set that is passed through by doing a running average smoothing method\n","\n","  Args: \n","  data: numpy array, our data to smooth\n","  smoothing_length: int, the length for our data to be smoothed\n","\n","  Return: \n","  data_smoothed: numpy array, the smoothed data\n","  time_smoothed: numpy array, the smoothed (truncated) time array\n","  \"\"\"\n","  data_smoothed = np.empty(len(data))\n","  \n","  for i in range(0, len(data)):\n","    data_smoothed[i] = np.sum(data[i:(i+int(smoothing_length))]) / int(smoothing_length)\n","    i += 1\n","  \n","  \n","  return data_smoothed"],"metadata":{"id":"QM-Vh-WWQujd"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# residuals calculations, data - model\n","residuals = temp - double_sine(mjd, *temp_fitted)"],"metadata":{"id":"LrIvX5ztPVqV"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# smooth the residuals by 4001 hours\n","smooth_hours = 4001\n","smooth_hrs = 2000\n","# smooth_dates = smooth_hours / 24\n","residual_smooth = smooth(residuals, smooth_hours)\n","# residual_smooth = smooth_fix(residuals, smooth_hrs)"],"metadata":{"id":"70Ke_O1aTIRD"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# straight-line fit using linregress\n","from scipy import stats\n","slope, intercept, r_value, p_value, std_err = stats.linregress(mjd, residual_smooth)\n","\n","print('Slope of the residual fit: ', slope)\n","print('Slope uncertainty: ', std_err)\n","\n","# plotting the linear fit with the smoothed data \n","\n","# plt.plot(mjd, residuals) # data is smoothed, you can test it out by uncomment this line\n","plt.plot(mjd, residual_smooth, label = 'Smoothed residual by 4001 hours', color = 'g', lw = 1.0)\n","plt.plot(mjd, slope*mjd+intercept,'r--', lw = 2, label = 'Linear fit of the residual')\n","plt.title('Linear fitted the unsmoothed residuals')\n","plt.xlabel('Modified Julian Dates (days)')\n","plt.ylabel('Temperature in ' + u'\\u00b0'+ 'F')\n","plt.grid()\n","plt.legend()\n","plt.text(42500, -15, 'Nhat Nguyen')\n","# plt.xlim(45100, 45110) # 10 days\n","\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":571},"id":"7EEdhJ8aPQUG","outputId":"0b0e4f26-bc8f-4146-c544-1db4c2923582","executionInfo":{"status":"ok","timestamp":1670431447094,"user_tz":480,"elapsed":2436,"user":{"displayName":"Nhat Nguyen","userId":"12519508785998357501"}}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Slope of the residual fit:  6.843607434837748e-05\n","Slope uncertainty:  3.273201057720689e-07\n"]},{"output_type":"execute_result","data":{"text/plain":["Text(42500, -15, 'Nhat Nguyen')"]},"metadata":{},"execution_count":38},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["## part 1d - calculate the difference of the unsmoothed residual mean between earlier times and later times\n","\n","# array slicing\n","res_early = residuals[(mjd >= 41683) & (mjd <= 50082)]   # earlier time from mjd 41683->50082\n","res_late = residuals[(mjd >= 50083) & (mjd <= 58483)]    # later time from mjd 50083->58483\n","\n","res_mean_diff = np.mean(res_late) - np.mean(res_early) \n","res_uncertainty = np.sqrt((np.std(res_early, ddof=1)/np.sqrt(len(residuals)))**2)+((np.std(res_late, ddof=1)/np.sqrt(len(residuals))**2))  # sqrt(sigma_early^2 + sigma_late^2)\n","significance_level = res_mean_diff / res_uncertainty\n","\n","print('Residual mean difference between earlier times and later time: {:.3f}'.format(res_mean_diff))\n","print('Difference uncertainty: {:.3f}'.format(res_uncertainty))\n","print('Significant level: {:.5f}'.format(significance_level))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GCeTspKrb8ni","executionInfo":{"status":"ok","timestamp":1670431456661,"user_tz":480,"elapsed":259,"user":{"displayName":"Nhat Nguyen","userId":"12519508785998357501"}},"outputId":"f0497499-7a7f-40ee-e8c5-6aabb18d2b23"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Residual mean difference between earlier times and later time: 0.552\n","Difference uncertainty: 0.007\n","Significant level: 77.36162\n"]}]},{"cell_type":"code","source":["## part 2 a - predict 9 am, 12/7/22 temp\n","\n","hour_utc = 9 + 8                                # 9 am\n","hour_local = hour_utc - 8                   # convert to local time (PST) since our data points are in UTC    \n","offset_2, mjd_dates = gcal2jd(2022,12,7)  # convert calendar dates into mjd\n","mjd_predict = mjd_dates + hour_local/24       # add the dates and time together in mjd format\n","print('Predicted time in MJD: ', mjd_predict)    \n","print('Predicted temperatures on Dec 7th, 2022, 9 am: {:.2f}'.format(double_sine(mjd_predict, *temp_fitted)*(9/5)+32) + u'\\u00b0'+ 'F' + ' or {:.2f}'.format(double_sine(mjd_predict, *temp_fitted))+ u'\\u00b0'+ 'C')\n","                      "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DRIp47j-4tTB","executionInfo":{"status":"ok","timestamp":1670431568197,"user_tz":480,"elapsed":468,"user":{"displayName":"Nhat Nguyen","userId":"12519508785998357501"}},"outputId":"f8db2a9c-0427-448f-b19d-2a81c082c77d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Predicted time in MJD:  59920.375\n","Predicted temperatures on Dec 7th, 2022, 9 am: 25.64°F or -3.53°C\n"]}]},{"cell_type":"code","source":["# part 2 b find mean temperature at 9 am 12/7/22 using the temp data\n","\n","data_year = np.arange(1973, 2019, 1)  # we know the year is going to stay the same with an increase of 1, so np.arange is used in this case\n","\n","i= 0\n","mjd_dec_7th = np.empty(len(data_year))\n","while i < len(data_year):\n","  offset, mjd_dec_7th[i] = gcal2jd(data_year[i], 12, 7)\n","  i += 1\n","\n","\n","mjd_dec_7th_9am = mjd_dec_7th + hour_local/24   # mjd for the specified time and date\n","print('MJD array for the temp data from 1973-2018: \\n', mjd_dec_7th_9am)\n"],"metadata":{"id":"EO4nRHtBG2UM","executionInfo":{"status":"ok","timestamp":1670431612307,"user_tz":480,"elapsed":336,"user":{"displayName":"Nhat Nguyen","userId":"12519508785998357501"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"4987a419-9162-44f5-889c-3ce215c335cf"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["MJD array for the temp data from 1973-2018: \n"," [42023.375 42388.375 42753.375 43119.375 43484.375 43849.375 44214.375\n"," 44580.375 44945.375 45310.375 45675.375 46041.375 46406.375 46771.375\n"," 47136.375 47502.375 47867.375 48232.375 48597.375 48963.375 49328.375\n"," 49693.375 50058.375 50424.375 50789.375 51154.375 51519.375 51885.375\n"," 52250.375 52615.375 52980.375 53346.375 53711.375 54076.375 54441.375\n"," 54807.375 55172.375 55537.375 55902.375 56268.375 56633.375 56998.375\n"," 57363.375 57729.375 58094.375 58459.375]\n"]}]},{"cell_type":"code","source":["index = np.searchsorted(mjd, mjd_dec_7th_9am)   # search for the index that mjd contains mjd_dec_7th_9am elements\n","temp_9am = temp[index]                          # array slicing with the index found\n","index2 = np.searchsorted(mjd, mjd_dec_7th_9am, side='left')   # search for the index that mjd contains mjd_dec_7th_9am elements\n","temp_9am2 = temp[index2]\n","print('Temperatures at_9am, 12/7, from 1973-2018: \\n', temp_9am)   \n","print('Temperatures at_9am left, 12/7, from 1973-2018: \\n', temp_9am2)   \n","\n","print('Mean temperature calculated: {:.2f}'.format(np.mean(temp_9am)*(9/5)+32) + u'\\u00b0'+ 'F' + ' or {:.2f}'.format(np.mean(temp_9am))+ u'\\u00b0'+ 'C')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BbyEI5BkNYH4","executionInfo":{"status":"ok","timestamp":1670432186914,"user_tz":480,"elapsed":204,"user":{"displayName":"Nhat Nguyen","userId":"12519508785998357501"}},"outputId":"90ee6999-a44c-4e9e-9c41-1df7d3b7efd5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Temperatures at_9am, 12/7, from 1973-2018: \n"," [  5.    0.   -0.6  -3.2   1.1 -17.8   5.  -12.2   3.9  -9.4  -5.   -9.4\n","   0.6  -1.1   3.9  -0.6  -0.6  -2.2   1.7  -6.7  -2.2  -6.7  -2.2   2.8\n","  -3.3  -1.7  -0.6  -2.2  -1.1   1.1  -2.2  -1.1 -16.1  -1.7  -3.3   1.7\n"," -12.2  -3.9  -5.6  -1.1 -15.    2.2   4.4  -5.6  -5.6  -6.7]\n","Temperatures at_9am left, 12/7, from 1973-2018: \n"," [  5.    0.   -0.6  -3.2   1.1 -17.8   5.  -12.2   3.9  -9.4  -5.   -9.4\n","   0.6  -1.1   3.9  -0.6  -0.6  -2.2   1.7  -6.7  -2.2  -6.7  -2.2   2.8\n","  -3.3  -1.7  -0.6  -2.2  -1.1   1.1  -2.2  -1.1 -16.1  -1.7  -3.3   1.7\n"," -12.2  -3.9  -5.6  -1.1 -15.    2.2   4.4  -5.6  -5.6  -6.7]\n","Mean temperature calculated: 26.70°F or -2.95°C\n"]}]},{"cell_type":"code","source":["## part 2c - find the confidence interval on the mean calculated above\n","\n","confident_interval_upper = np.mean(temp_9am) + 1.96*(np.std(temp_9am)/np.sqrt(len(temp_9am)))\n","confident_interval_lower = np.mean(temp_9am) - 1.96*(np.std(temp_9am)/np.sqrt(len(temp_9am)))\n","\n","print('At 95% confidence level, the lower interval of the mean is at {:.2f}'.format(confident_interval_lower*(9/5)+32) + u'\\u00b0'+ 'F' + ' or {:.2f}'.format(confident_interval_lower)+ u'\\u00b0'+ 'C')\n","# print(np.mean(temp_9am)-confident_interval_lower)\n","print('At 95% confidence level, the upper interval of the mean is at {:.2f}'.format(confident_interval_upper*(9/5)+32) + u'\\u00b0'+ 'F' + ' or {:.2f}'.format(confident_interval_upper)+ u'\\u00b0'+ 'C')\n","# print('Upper: ', confident_interval_upper)\n","# print(confident_interval_upper-np.mean(temp_9am))"],"metadata":{"id":"HRAfER8B0Z7g","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1670431636237,"user_tz":480,"elapsed":6,"user":{"displayName":"Nhat Nguyen","userId":"12519508785998357501"}},"outputId":"432b77e9-f59d-4673-b217-efd7da775556"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["At 95% confidence level, the lower interval of the mean is at 23.90°F or -4.50°C\n","At 95% confidence level, the upper interval of the mean is at 29.50°F or -1.39°C\n"]}]},{"cell_type":"code","source":["# part 2d - find the 95% CI using nonparametric bootstrap \n","\n","def bootstrap_mean_CI(data, conf_level):\n","    \"\"\"\n","    Computes the confidence interval at the specified confidence level using a nonparametric bootstrap.\n","    \n","    Args:\n","        data: numpy array, data set\n","        conf_level: float, confidence level for the interval, 0 < p < 1\n","        \n","    Returns:\n","        conf_low: float, low end of the confidence interval\n","        conf_high: float, high end of the confidence interval\n","        bootstrap: numpy array, bootstrapped array of calculated means\n","    \"\"\"\n","    \n","    z_table = np.array([1.282, 1.440, 1.645, 1.960, 2.576, 2.807, 3.291]) \n","    confidence = np.array([.80, .85, .90, .95, .99, .995, .999]) \n","    z_value = z_table[np.searchsorted(confidence, conf_level)]\n","    print('Confidence level: {:.1f}'.format(conf_level*100) + '%')\n","    resamplings = int(1e5)  # 10^5 samples\n","    bootstrap = np.empty(resamplings)  # make a new array\n","    for i in range(0,int(resamplings)):\n","      samples = np.random.choice(data, len(data), replace=True) # pick and choose with replacement to make new data sets\n","      # bootstrap = np.append(bootstrap, np.mean(samples))        # calculate the mean of the data set made and append it to the bootstrap array \n","      bootstrap[i] = np.mean(samples)\n","      i += 1\n","    bootstrap_sorted = np.sort(bootstrap)\n","    conf_low = bootstrap_sorted[int(len(bootstrap_sorted)*((1-conf_level)/2))]\n","    conf_high = bootstrap_sorted[int(len(bootstrap_sorted)*(1-((1-conf_level)/2)))]\n","\n","\n","    return conf_low, conf_high, bootstrap"],"metadata":{"id":"wvfZRgnkTJm6"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["confidence_level = .95\n","low_CI, high_CI, boot = bootstrap_mean_CI(temp_9am, confidence_level)\n","print('At ' + str(confidence_level*100) + '% confidence level, the lower interval of the mean is at {:.6f}'.format(low_CI*(9/5)+32) + u'\\u00b0'+ 'F' + ' or {:.6f}'.format(low_CI)+ u'\\u00b0'+ 'C')\n","print('At ' + str(confidence_level*100) + '% confidence level, the upper interval of the mean is at {:.6f}'.format(high_CI*(9/5)+32) + u'\\u00b0'+ 'F' + ' or {:.6f}'.format(high_CI)+ u'\\u00b0'+ 'C')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sSdnPalcjZqs","executionInfo":{"status":"ok","timestamp":1670431777281,"user_tz":480,"elapsed":4791,"user":{"displayName":"Nhat Nguyen","userId":"12519508785998357501"}},"outputId":"5a177ac7-62ed-489d-85a1-6d12fac3c9c8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Confidence level: 95.0%\n","At 95.0% confidence level, the lower interval of the mean is at 23.813913°F or -4.547826°C\n","At 95.0% confidence level, the upper interval of the mean is at 29.405652°F or -1.441304°C\n"]}]},{"cell_type":"code","source":["print('The bootstrapped sample mean: {:.6f}'.format(boot.mean()*(9/5)+32)+ u'\\u00b0'+ 'F' + ' or {:.6f}'.format(low_CI)+ u'\\u00b0'+ 'C')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UQo4UCIOlnyP","executionInfo":{"status":"ok","timestamp":1670432344056,"user_tz":480,"elapsed":194,"user":{"displayName":"Nhat Nguyen","userId":"12519508785998357501"}},"outputId":"70b74798-f2b8-4a77-ba0a-af23830d225d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The bootstrapped sample mean: 26.695961°F or -4.547826°C\n"]}]},{"cell_type":"code","source":["## some comments\n","# the resamplings samples (10^5) were high so the interval were very close to the bootstrapped sample mean\n","# if I lower the resamplings data sets, the intervals will get farther from the mean\n","print('^ Some comments from trial and error with the code on bootstrapping ^')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uOvrU8swLHQA","executionInfo":{"status":"ok","timestamp":1670113190401,"user_tz":480,"elapsed":14,"user":{"displayName":"Nhat Nguyen","userId":"12519508785998357501"}},"outputId":"017a27bf-74f1-45e3-8f64-700908af1f84"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["^ Some comments from trial and error with the code on bootstrapping ^\n"]}]}]}