{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPN8OfvOiyXZ0fDFLFgby9c"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["## Nhat Nguyen \n","### Computational Physics, PHYS 421\n","#### HW5, due: 11/7, 10 am\n"],"metadata":{"id":"uZYZZUMiwndp"}},{"cell_type":"markdown","source":["1) (10 pts) Write a program that takes an input the number of people in a room. Assuming everyone's birthdays are independent (no twins) and births are completely uniformly distributed on the calendar, the program should return the probability that at least one person in the room has your specific birthday. (Ignore leap years.) Hint: it's much easier to work with complementary probabilities in this problem. What's the chance that someone does not have your birthday?\n","\n","2) (10 pts)\n","\n","a) (5 pts) If you roll two fair six-sided dice, what's the probability that you will get a total of 10 or higher? Show your work.\n","\n","b) (5 pts) Now let's roll the two dice again. What's the probability that the same number will come up on both dice? Explain.\n","\n","3) (10 pts) A particle has mass 2.5 eV. A single measurement of the mass of this particle in one particular experiment has 1σ errors of 3.7 eV. Assuming a Gaussian p.d.f., how many measurements would you expect to need to detect a nonzero particle mass at a 5σ level? (Once you understand how to approach this, the calculation itself is trivial.)"],"metadata":{"id":"xylJw4QLwlmo"}},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":339},"id":"4GLC8X24wkch","executionInfo":{"status":"error","timestamp":1667943412722,"user_tz":480,"elapsed":4626,"user":{"displayName":"Nhat Nguyen","userId":"12519508785998357501"}},"outputId":"8a75c2d7-1c94-4012-bde2-898009d7c8be"},"outputs":[{"name":"stdout","output_type":"stream","text":["How many people are there in the room: 366\n"]},{"output_type":"error","ename":"ValueError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-1-ff1f86ee386f>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     27\u001b[0m   \u001b[0;32mreturn\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     28\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 29\u001b[0;31m \u001b[0mbirthday_chance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m<ipython-input-1-ff1f86ee386f>\u001b[0m in \u001b[0;36mbirthday_chance\u001b[0;34m()\u001b[0m\n\u001b[1;32m     21\u001b[0m   \u001b[0;31m# use permutations because birthdays are selected without replacement, only one category, and order matters\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     22\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 23\u001b[0;31m   \u001b[0mnot_same_bday\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mmath\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfactorial\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m365\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m/\u001b[0m\u001b[0mmath\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfactorial\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m365\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0mpeople\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     24\u001b[0m   \u001b[0mp_not_same_bday\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnot_same_bday\u001b[0m\u001b[0;34m/\u001b[0m\u001b[0mpossible_birthdays\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     25\u001b[0m   \u001b[0mp_same_bday\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m1\u001b[0m \u001b[0;34m-\u001b[0m \u001b[0mp_not_same_bday\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: factorial() not defined for negative values"]}],"source":["## part 1 - birthday\n","\n","import numpy as np\n","from numpy.random import normal\n","import math\n","\n","def birthday_chance():\n","  \"\"\"\n","    This function calculates the chance that at least one person in the room has your specific birthday\n","\n","    Arg:\n","    people: int, number of people in the room\n","\n","    Return: \n","    p_same_bday: float, probability \n","  \"\"\"\n","  people = int(input('How many people are there in the room: '))\n","  possible_birthdays = 365**people  # each brithday can be any day within the year\n","\n","  # find the probability that the birthdays are not the same\n","  # use permutations because birthdays are selected without replacement, only one category, and order matters\n","\n","  not_same_bday = (math.factorial(365)/math.factorial(365-people))\n","  p_not_same_bday = not_same_bday/possible_birthdays\n","  p_same_bday = 1 - p_not_same_bday\n","  print(\"Probability of at least two people has the same birthday: {:.2f}\".format(p_same_bday*100) + \" %\")\n","  return \n","\n","birthday_chance()"]},{"cell_type":"code","source":["## part 2 - pair of dice\n","\"\"\"(a,b) = (# in die 1, # in die 2)\n","sum (diagonal from right to left)\n","2    {(1,1)} (1,2) (1,3) (1,4) (1,5) (1,6) \n","3    (2,1) {(2,2)} (2,3) (2,4) (2,5) (2,6) \n","4    (3,1) (3,2) {(3,3)} (3,4) (3,5) (3,6) \n","5    (4,1) (4,2) (4,3) {(4,4)} (4,5) [(4,6)] \n","6    (5,1) (5,2) (5,3) (5,4) {[(5,5)]} [(5,6)]          [ ]: pair that yield the total of 10 or more - 6 pairs  \n","7    (6,1) (6,2) (6,3) [(6,4)] [(6,5)] {[(6,6)]}        { }: pair that same number appear on both dice, diagonal from left tp rogjt  - 6 pairs\n","      8      9     10     11      12\n","\n","\"\"\"\n","\n","def dice_pair_toss():\n","  \"\"\"\n","    This function calculates the chance of getting a certain number from a pair of dice\n","\n","    Arg:\n","    n/a\n","    Return: \n","    n/a\n","  \"\"\"\n","  possible_outcomes = 6*6  # 36 different numbers from each die\n","  ten_or_more = 6  # from the graph above\n","  same_pair = 6\n","  probability_ten = ten_or_more/possible_outcomes\n","  probability_same = same_pair/possible_outcomes\n","\n","  print(\"Probability getting a total of 10 or higher: {:.2f}\".format(probability_ten*100) + \" %\")\n","  print(\"Probability getting a same pair: {:.2f}\".format(probability_same*100) + \" %\")\n","  return \n","\n","dice_pair_toss()"],"metadata":{"id":"RuNHfECEUqfo","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1667835183369,"user_tz":480,"elapsed":296,"user":{"displayName":"Nhat Nguyen","userId":"12519508785998357501"}},"outputId":"5cb7a582-a984-442b-9df3-3fb52f251037"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Probability getting a total of 10 or higher: 16.67 %\n","Probability getting a same pair: 16.67 %\n"]}]},{"cell_type":"code","source":["## part 3 - Gaussian pdf\n","\n","\"\"\"\n","We have the mass of the particle is 2.5 eV, so we can use that as a mean. From the one measurement, we can spot the standard deviation of 1σ is 3.7 eV. With that, we can caluculate the standard error of the mean is 3.7 - 2.5 = 1.2 eV. \n","Finally, using the uncertainty of the mean equation, we solve for N with 5σ to find out how many measurements needed to detect a nonzero particle mass at a 5σ level. \n","\n","\"\"\"\n","sigma_mu = 1.2 # eV\n","sigma = 3.7    # eV\n","\n","N = ((5*sigma)/sigma_mu)**2\n","print('It would take: {:d}'.format(round(N)) + ' measurements to detect a nonzero particle mass at a 5σ level')"],"metadata":{"id":"MjN4mPTfv5PX","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1667837797305,"user_tz":480,"elapsed":218,"user":{"displayName":"Nhat Nguyen","userId":"12519508785998357501"}},"outputId":"f09d0800-c057-4cd9-d75d-4c8454be6f93"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["It would take: 238 measurements to detect a nonzero particle mass at a 5σ level\n"]}]}]}